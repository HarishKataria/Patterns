{"Typealiases.html#/s:8Patterns10MatchCounta":{"name":"MatchCount","abstract":"<p>Match count as interger values</p>"},"Typealiases.html#/s:8Patterns18SubMatchIdentifiera":{"name":"SubMatchIdentifier","abstract":"<p>Submatch identifier as integer values</p>"},"Typealiases.html#/s:8Patterns11StringRangea":{"name":"StringRange","abstract":"<p>Range with string indexes</p>"},"Typealiases.html#/s:8Patterns13RangeFragmenta":{"name":"RangeFragment","abstract":"<p>Fragment based on range values</p>"},"Typealiases.html#/s:8Patterns17SubstringFragmenta":{"name":"SubstringFragment","abstract":"<p>Fragment based on substring values</p>"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV10maxMatchesSiSgv":{"name":"maxMatches","abstract":"<p>maximum number of matches allowed</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV8fragmentAA12FragmentTypeVv":{"name":"fragment","abstract":"<p>types of fragments allowed</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV8userDataypSgv":{"name":"userData","abstract":"<p>generic payload for custom patterns to use</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigVAcA12FragmentTypeV8fragment_SiSg10maxMatchesypSg8userDatatcfc":{"name":"init(fragment:maxMatches:userData:)","abstract":"<p>init with fragment, maxMatches and userData</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV3allACvZ":{"name":"all","abstract":"<p>allow all search results</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV7matchesACvZ":{"name":"matches","abstract":"<p>allow matched region results only</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV11deepMatchesACvZ":{"name":"deepMatches","abstract":"<p>allow match and sub-match results only</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV10firstMatchACvZ":{"name":"firstMatch","abstract":"<p>allow only one match result</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV4textACvZ":{"name":"text","abstract":"<p>allow only unmatched region results</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV7shallowACvZ":{"name":"shallow","abstract":"<p>allow only matched and unmatched (but not sub-match) results</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV6allowsSbSi10matchCount_tF":{"name":"allows(matchCount:)","abstract":"<p>checks if the new match count is allowed by this configuration</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV3setACSi10maxMatches_tF":{"name":"set(maxMatches:)","abstract":"<p>get a new configuration with the new match count</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV3setAcA12FragmentTypeV8fragment_tF":{"name":"set(fragment:)","abstract":"<p>get a new configuration with the new fragment types allowed</p>","parent_name":"SearchConfig"},"Structs/SearchConfig.html#/s:8Patterns12SearchConfigV6removeAcA12FragmentTypeV8fragment_tF":{"name":"remove(fragment:)","abstract":"<p>get a new configuration without the given fragment type</p>","parent_name":"SearchConfig"},"Structs/Builder.html#/s:8Patterns7BuilderV7patternAA7Pattern_pSgSayAA7ElementOGd_AH6ConfigV6configtFZ":{"name":"pattern(_:config:)","abstract":"<p>create a Pattern from the give sequence of Elements and initial configuration setting</p>","parent_name":"Builder"},"Structs/ValueWrapper.html#/s:8Patterns12ValueWrapperVACyxGSgx8template_tcfc":{"name":"init(template:)","abstract":"<p>initializer for storing a copy of the reference object","parent_name":"ValueWrapper"},"Structs/ValueWrapper.html#/s:8Patterns12ValueWrapperV5valuexSgv":{"name":"value","abstract":"<p>independant value aka copy of the original reference</p>","parent_name":"ValueWrapper"},"Structs/ValueWrapper.html#/s:8Patterns12ValueWrapperV2eeoiSbACyxG_AEtFZ":{"name":"==(_:_:)","abstract":"<p>equality driven by the underline object&rsquo;s extactly reference match</p>","parent_name":"ValueWrapper"},"Structs/ValueWrapper.html#/s:8Patterns12ValueWrapperVAARlzCSo9NSCopyingRzs9EquatableRzlE2eeoiSbACyxG_AGtFZ":{"name":"==(_:_:)","abstract":"<p>equality driven by the underline object&rsquo;s equality operator</p>","parent_name":"ValueWrapper"},"Structs/InversePattern.html#/s:8Patterns14InversePatternV6sourceAA0C0_pv":{"name":"source","abstract":"<p>the source pattern</p>","parent_name":"InversePattern"},"Structs/InversePattern.html#/s:8Patterns11RangeFinderP6locates0B0VySS5IndexVGSgSS2in_tF":{"name":"locate(in:)","parent_name":"InversePattern"},"Structs/InversePattern.html#/s:8Patterns8ReplacerP14replaceMatchesS2S2in_SS2totF":{"name":"replaceMatches(in:to:)","parent_name":"InversePattern"},"Structs/InversePattern.html#/s:8Patterns13MatchIteratorP7iterateSiSS4over_AA12SearchConfigV12configuredBySbAA8FragmentOys5RangeVySS5IndexVGGc5usingtF":{"name":"iterate(over:configuredBy:using:)","parent_name":"InversePattern"},"Structs/InversePattern.html#/s:8Patterns7PatternP7inverseAaB_pv":{"name":"inverse","parent_name":"InversePattern"},"Structs/OrPattern.html#/s:8Patterns9OrPatternV8patternsSayAA0C0_pGv":{"name":"patterns","abstract":"<p>the array of patterns that are being joined in an OR operation</p>","parent_name":"OrPattern"},"Structs/OrPattern.html#/s:8Patterns11RangeFinderP6locates0B0VySS5IndexVGSgSS2in_tF":{"name":"locate(in:)","parent_name":"OrPattern"},"Structs/OrPattern.html#/s:8Patterns8ReplacerP14replaceMatchesS2S2in_SS2totF":{"name":"replaceMatches(in:to:)","parent_name":"OrPattern"},"Structs/OrPattern.html#/s:8Patterns13MatchIteratorP7iterateSiSS4over_AA12SearchConfigV12configuredBySbAA8FragmentOys5RangeVySS5IndexVGGc5usingtF":{"name":"iterate(over:configuredBy:using:)","parent_name":"OrPattern"},"Structs/AndPattern.html#/s:8Patterns10AndPatternV8patternsSayAA0C0_pGv":{"name":"patterns","abstract":"<p>the array of patterns that are being joined in an AND operation</p>","parent_name":"AndPattern"},"Structs/AndPattern.html#/s:8Patterns11RangeFinderP6locates0B0VySS5IndexVGSgSS2in_tF":{"name":"locate(in:)","parent_name":"AndPattern"},"Structs/AndPattern.html#/s:8Patterns8ReplacerP14replaceMatchesS2S2in_SS2totF":{"name":"replaceMatches(in:to:)","parent_name":"AndPattern"},"Structs/AndPattern.html#/s:8Patterns13MatchIteratorP7iterateSiSS4over_AA12SearchConfigV12configuredBySbAA8FragmentOys5RangeVySS5IndexVGGc5usingtF":{"name":"iterate(over:configuredBy:using:)","parent_name":"AndPattern"},"Structs/FragmentType.html#/s:8Patterns12FragmentTypeV5matchACvZ":{"name":"match","abstract":"<p>section for matches</p>","parent_name":"FragmentType"},"Structs/FragmentType.html#/s:8Patterns12FragmentTypeV8subMatchACvZ":{"name":"subMatch","abstract":"<p>section for matches within matches</p>","parent_name":"FragmentType"},"Structs/FragmentType.html#/s:8Patterns12FragmentTypeV4textACvZ":{"name":"text","abstract":"<p>section for text surrounding matches</p>","parent_name":"FragmentType"},"Structs/FragmentType.html#/s:8Patterns12FragmentTypeV3allACvZ":{"name":"all","abstract":"<p>all fragment type</p>","parent_name":"FragmentType"},"Structs/FragmentType.html#/s:8Patterns12FragmentTypeV8allMatchACvZ":{"name":"allMatch","abstract":"<p>matches and sub-matches only</p>","parent_name":"FragmentType"},"Structs/FragmentType.html#/s:8Patterns12FragmentTypeV8rawValueSiv":{"name":"rawValue","abstract":"<p>OptionSet property</p>","parent_name":"FragmentType"},"Structs/FragmentType.html#/s:8Patterns12FragmentTypeVACSi8rawValue_tcfc":{"name":"init(rawValue:)","abstract":"<p>OptionSet initializer</p>","parent_name":"FragmentType"},"Structs/Regex.html#/s:8Patterns5RegexVACSgSS_Sb9matchCasetcfc":{"name":"init(_:matchCase:)","abstract":"<p>initializer for common use-case of specifying only the case-sensitivity option</p>","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns5RegexVACSgSS_So19NSRegularExpressionC7OptionsV7optionstcfc":{"name":"init(_:options:)","abstract":"<p>initializer for full NSRegularExpression option set</p>","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns14MatchCollectorP18supportsSubMatchesSbv":{"name":"supportsSubMatches","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns11RangeFinderP6locates0B0VySS5IndexVGSgSS2in_tF":{"name":"locate(in:)","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns13MatchIteratorP7iterateSiSS4over_AA12SearchConfigV12configuredBySbAA8FragmentOys5RangeVySS5IndexVGGc5usingtF":{"name":"iterate(over:configuredBy:using:)","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns8ReplacerP14replaceMatchesS2S2in_SS2totF":{"name":"replaceMatches(in:to:)","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns8ReplacerP6escapeS2S8template_tF":{"name":"escape(template:)","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns8ReplacerP24supportsReplaceTemplatesSbv":{"name":"supportsReplaceTemplates","parent_name":"Regex"},"Structs/Regex.html#/s:8Patterns5RegexV6escapeS2S7pattern_tFZ":{"name":"escape(pattern:)","abstract":"<p>Escapes the special characters in the given string</p>","parent_name":"Regex"},"Structs/Regex.html":{"name":"Regex","abstract":"<p>A pattern type that uses the NSRegularExpression engine</p>"},"Structs/FragmentType.html":{"name":"FragmentType","abstract":"<p>Fragment types for search configuration filtering</p>"},"Structs/AndPattern.html":{"name":"AndPattern","abstract":"<p>Joins an array of patterns in an AND boolean operation</p>"},"Structs/OrPattern.html":{"name":"OrPattern","abstract":"<p>Joins an array of patterns in a OR boolean operation</p>"},"Structs/InversePattern.html":{"name":"InversePattern","abstract":"<p>A pattern wrapper to give inverse match results</p>"},"Structs/ValueWrapper.html":{"name":"ValueWrapper","abstract":"<p>Pièce de résistance of this framework &ndash; a wrapper to enable"},"Structs/Builder.html":{"name":"Builder","abstract":"<p>A Builder that composes a Pattern from a sequence of Elements</p>"},"Structs/SearchConfig.html":{"name":"SearchConfig","abstract":"<p>Search configuration value type</p>"},"Protocols/RangeFinder.html#/s:8Patterns11RangeFinderP6locates0B0VySS5IndexVGSgSS2in_tF":{"name":"locate(in:)","abstract":"<p>finds the location and size of the match in the given string</p>","parent_name":"RangeFinder"},"Protocols/MatchIterator.html#/s:8Patterns13MatchIteratorP7iterateSiSS4over_SbAA8FragmentOys5RangeVySS5IndexVGGc5usingtF":{"name":"iterate(over:using:)","abstract":"<p>iterates over the given string using the given closure</p>","parent_name":"MatchIterator"},"Protocols/MatchIterator.html#/s:8Patterns13MatchIteratorP7iterateSiSS4over_AA12SearchConfigV12configuredBySbAA8FragmentOys5RangeVySS5IndexVGGc5usingtF":{"name":"iterate(over:configuredBy:using:)","abstract":"<p>iterates over the given string using the given closure with a specific configuration</p>","parent_name":"MatchIterator"},"Protocols/Replacer.html#/s:8Patterns8ReplacerP14replaceMatchesS2S2in_SS2totF":{"name":"replaceMatches(in:to:)","abstract":"<p>replace matches from the input with the given template</p>","parent_name":"Replacer"},"Protocols/Replacer.html#/s:8Patterns8ReplacerP24supportsReplaceTemplatesSbv":{"name":"supportsReplaceTemplates","abstract":"<p>true if this pattern type supports templates</p>","parent_name":"Replacer"},"Protocols/Replacer.html#/s:8Patterns8ReplacerP6escapeS2S8template_tF":{"name":"escape(template:)","abstract":"<p>escape the template pattern</p>","parent_name":"Replacer"},"Protocols/Splitter.html#/s:8Patterns8SplitterP5splitSays9SubstringVGSSF":{"name":"split(_:)","abstract":"<p>gets an array of substring divided by the matches</p>","parent_name":"Splitter"},"Protocols/Splitter.html#/s:8Patterns8SplitterP5splitSays9SubstringVGSS_AA12SearchConfigV12configuredBytF":{"name":"split(_:configuredBy:)","abstract":"<p>gets array of substring divided by the matches filtered by the configuration</p>","parent_name":"Splitter"},"Protocols/Fragmenter.html#/s:8Patterns10FragmenterP9fragmentsSayAA8FragmentOys9SubstringVGGSS2of_tF":{"name":"fragments(of:)","abstract":"<p>breakdown the input string into an array of fragments</p>","parent_name":"Fragmenter"},"Protocols/Fragmenter.html#/s:8Patterns10FragmenterP9fragmentsSayAA8FragmentOys9SubstringVGGSS2of_AA12SearchConfigV12configuredBytF":{"name":"fragments(of:configuredBy:)","abstract":"<p>breakdown the input string to a specific configuration</p>","parent_name":"Fragmenter"},"Protocols/MatchCollector.html#/s:8Patterns14MatchCollectorP7matchesSayAA8FragmentOys9SubstringVGGSS2in_tF":{"name":"matches(in:)","abstract":"<p>gets all the matches</p>","parent_name":"MatchCollector"},"Protocols/MatchCollector.html#/s:8Patterns14MatchCollectorP7matchesSayAA8FragmentOys9SubstringVGGSS2in_AA12SearchConfigV12configuredBytF":{"name":"matches(in:configuredBy:)","abstract":"<p>gets all the matches filtered to a configuration</p>","parent_name":"MatchCollector"},"Protocols/MatchCollector.html#/s:8Patterns14MatchCollectorP11matchRangesSayAA8FragmentOys5RangeVySS5IndexVGGGSS2in_tF":{"name":"matchRanges(in:)","abstract":"<p>gets all the match ranges</p>","parent_name":"MatchCollector"},"Protocols/MatchCollector.html#/s:8Patterns14MatchCollectorP11matchRangesSayAA8FragmentOys5RangeVySS5IndexVGGGSS2in_AA12SearchConfigV12configuredBytF":{"name":"matchRanges(in:configuredBy:)","abstract":"<p>gets all the match ranges filtered by the given configuration</p>","parent_name":"MatchCollector"},"Protocols/MatchCollector.html#/s:8Patterns14MatchCollectorP18supportsSubMatchesSbv":{"name":"supportsSubMatches","abstract":"<p>true if the type supports matches within matched regions</p>","parent_name":"MatchCollector"},"Protocols/SubstringFinder.html#/s:8Patterns15SubstringFinderP5firsts0B0VSgSS2in_tF":{"name":"first(in:)","abstract":"<p>get the first match as a substring</p>","parent_name":"SubstringFinder"},"Protocols/MatchChecker.html#/s:8Patterns12MatchCheckerP10hasMatchesSbSS2in_tF":{"name":"hasMatches(in:)","abstract":"<p>returns true if pattern exits in the given string</p>","parent_name":"MatchChecker"},"Protocols/Pattern.html#/s:8Patterns7PatternP7inverseAaB_pv":{"name":"inverse","abstract":"<p>inverts the matching bahavior</p>","parent_name":"Pattern"},"Protocols/Pattern.html#/s:8Patterns7PatternP3andAaB_pAaB_pF":{"name":"and(_:)","abstract":"<p>joins with another pattern for a Boolean AND operation</p>","parent_name":"Pattern"},"Protocols/Pattern.html#/s:8Patterns7PatternP2orAaB_pAaB_pF":{"name":"or(_:)","abstract":"<p>joins with another pattern for a Boolean OR operation</p>","parent_name":"Pattern"},"Protocols/Pattern.html":{"name":"Pattern","abstract":"<p>This framework&rsquo;s main protocol, Pattern, consolidates various aspects"},"Protocols/MatchChecker.html":{"name":"MatchChecker","abstract":"<p>The simplest matcher &ndash; one that finds if the match exists or not</p>"},"Protocols/SubstringFinder.html":{"name":"SubstringFinder","abstract":"<p>A utility variation of RangeFinder, that returns Substring value instead of range</p>"},"Protocols/MatchCollector.html":{"name":"MatchCollector","abstract":"<p>Matcher that can find multiple match instances</p>"},"Protocols/Fragmenter.html":{"name":"Fragmenter","abstract":"<p>A pattern type that can breakdown a string into matches, sub-matches,"},"Protocols/Splitter.html":{"name":"Splitter","abstract":"<p>Matcher that specializes in breaking string value into substring values</p>"},"Protocols/Replacer.html":{"name":"Replacer","abstract":"<p>Matcher that can transform strings by replacing matched areas</p>"},"Protocols/MatchIterator.html":{"name":"MatchIterator","abstract":"<p>An iterator type to traverse the string fragments, both match and unmatched elements</p>"},"Protocols.html#/s:8Patterns13MatchBehaviorP":{"name":"MatchBehavior","abstract":"<p>Marker protocol for match behaviors</p>"},"Protocols/RangeFinder.html":{"name":"RangeFinder","abstract":"<p>The matcher that can find the location of the match</p>"},"Functions.html#/s:8Patterns2teoiSbAA12MatchChecker_p_SStF":{"name":"~=(_:_:)","abstract":"<p>Add support for using MatchChecker type support in <code>case</code> expressions</p>"},"Extensions/RawRepresentable.html#/s:s16RawRepresentableP8Patternss9OptionSetRzSi0A5ValueRtzlExSi4type_tcfc":{"name":"init(type:)","abstract":"<p>encapsulate the code to build bit value for each OptionSet element</p>","parent_name":"RawRepresentable"},"Extensions/Array.html#/s:Sa8PatternsAA7Pattern_pRszlE3andAaB_pv":{"name":"and","abstract":"<p>Joins the pattern elements in a AND boolean operation</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa8PatternsAA7Pattern_pRszlE2orAaB_pv":{"name":"or","abstract":"<p>Joins the pattern elements in a OR boolean operation</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/RawRepresentable.html":{"name":"RawRepresentable","abstract":"<p>Extension for Integer-based OptionSet</p>"},"Enums/Element/Config.html#/s:8Patterns7ElementO6ConfigV9matchCaseAEvZ":{"name":"matchCase","abstract":"<p>match characters of same case</p>","parent_name":"Config"},"Enums/Element/Config.html#/s:8Patterns7ElementO6ConfigV17anchorsMatchLinesAEvZ":{"name":"anchorsMatchLines","abstract":"<p>enables anchors to match boundaries on each line</p>","parent_name":"Config"},"Enums/Element/Config.html#/s:8Patterns7ElementO6ConfigV19anyIncudesLineCharsAEvZ":{"name":"anyIncudesLineChars","abstract":"<p>&lsquo;any&rsquo; element incudes line characters</p>","parent_name":"Config"},"Enums/Element/Config.html#/s:8Patterns7ElementO6ConfigV20unicodeWordBoundriesAEvZ":{"name":"unicodeWordBoundries","abstract":"<p>use unicode word boundries instead of ASCII</p>","parent_name":"Config"},"Enums/Element/Config.html#/s:s16RawRepresentableP8rawValue0aD0Qzv":{"name":"rawValue","parent_name":"Config"},"Enums/Element/Config.html#/s:s9OptionSetPx8RawValueQz03rawD0_tcfc":{"name":"init(rawValue:)","parent_name":"Config"},"Enums/Element/CollectionStatergy.html#/s:8Patterns7ElementO18CollectionStatergyO10possessiveA2EmF":{"name":"possessive","abstract":"<p>collect as many as possible</p>","parent_name":"CollectionStatergy"},"Enums/Element/CollectionStatergy.html#/s:8Patterns7ElementO18CollectionStatergyO10altruisticA2EmF":{"name":"altruistic","abstract":"<p>collect as few as possible</p>","parent_name":"CollectionStatergy"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO10atMostOnceA2EmF":{"name":"atMostOnce","abstract":"<p>At Most Once. Same as Regular Expression &lsquo;+&rsquo;.</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO11atLeastOnceA2EmF":{"name":"atLeastOnce","abstract":"<p>At Least Once. Same as Regular Expression &lsquo;?&rsquo;</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO3anyA2EmF":{"name":"any","abstract":"<p>Any number of times. Same as Regular Expression &lsquo;*&rsquo;</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO6atMostAESicAEmF":{"name":"atMost","abstract":"<p>At most &lsquo;n&rsquo; times</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO7atLeastAESicAEmF":{"name":"atLeast","abstract":"<p>At Least &lsquo;n&rsquo; times</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO8extactlyAESicAEmF":{"name":"extactly","abstract":"<p>extactly &lsquo;n&rsquo; times</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO7betweenAESi_SitcAEmF":{"name":"between","abstract":"<p>within a range of a minimum and a maximum count</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO9oneOrNoneAeC18CollectionStatergyOcAEmF":{"name":"oneOrNone","abstract":"<p>one or none times, driven by a collection statergy</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO9oneOrMoreAeC18CollectionStatergyOcAEmF":{"name":"oneOrMore","abstract":"<p>one or more times, driven by a collection statergy</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO10zeroOrMoreAeC18CollectionStatergyOcAEmF":{"name":"zeroOrMore","abstract":"<p>zero or more times, driven by a collection statergy</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO3maxAESi_AC18CollectionStatergyOtcAEmF":{"name":"max","abstract":"<p>repeat at most &lsquo;n&rsquo; times, driven by a collection statergy</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO3minAESi_AC18CollectionStatergyOtcAEmF":{"name":"min","abstract":"<p>repeat at least &lsquo;n&rsquo; times, driven by a collection statergy</p>","parent_name":"RepeatType"},"Enums/Element/RepeatType.html#/s:8Patterns7ElementO10RepeatTypeO6withinAESi_SiAC18CollectionStatergyOtcAEmF":{"name":"within","abstract":"<p>repeat between the range, driven by a collection statergy</p>","parent_name":"RepeatType"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO5slashA2EmF":{"name":"slash","abstract":"<p>&lsquo;\\&rsquo;</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO4bellA2EmF":{"name":"bell","abstract":"<p>&lsquo;\\b&rsquo;</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO9backspaceA2EmF":{"name":"backspace","abstract":"<p>backspace character</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO6escapeA2EmF":{"name":"escape","abstract":"<p>escape character</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO8formfeedA2EmF":{"name":"formfeed","abstract":"<p>&lsquo;\\f&rsquo;</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO3tabA2EmF":{"name":"tab","abstract":"<p>&lsquo;\\t&rsquo;</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO8graphemeA2EmF":{"name":"grapheme","abstract":"<p>grapheme character</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO7controlAESScAEmF":{"name":"control","abstract":"<p>character from control group</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO3hexAESicAEmF":{"name":"hex","abstract":"<p>character by hex value</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO5namedAESScAEmF":{"name":"named","abstract":"<p>named unicode character</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO19withUnicodePropertyAESScAEmF":{"name":"withUnicodeProperty","abstract":"<p>named unicode characters with given property</p>","parent_name":"SpecialCharacter"},"Enums/Element/SpecialCharacter.html#/s:8Patterns7ElementO16SpecialCharacterO22withoutUnicodePropertyAESScAEmF":{"name":"withoutUnicodeProperty","abstract":"<p>named unicode characters without given property</p>","parent_name":"SpecialCharacter"},"Enums/Element.html#/s:8Patterns7ElementO3anyA2CmF":{"name":"any","abstract":"<p>any character</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO5spaceA2CmF":{"name":"space","abstract":"<p>space characters</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO8notSpaceA2CmF":{"name":"notSpace","abstract":"<p>characters except spaces</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO5digitA2CmF":{"name":"digit","abstract":"<p>characters from &lsquo;0&rsquo; to &lsquo;9&rsquo;</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO8notDigitA2CmF":{"name":"notDigit","abstract":"<p>characters except &lsquo;0&rsquo; to &lsquo;9&rsquo;</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO4wordA2CmF":{"name":"word","abstract":"<p>character &lsquo;a&rsquo; to &lsquo;z&rsquo;</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO7notWordA2CmF":{"name":"notWord","abstract":"<p>characters except &lsquo;a&rsquo; to &lsquo;z&rsquo;</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO7newLineA2CmF":{"name":"newLine","abstract":"<p>characters &lsquo;\\n&rsquo;, &lsquo;\\r&rsquo;, or &lsquo;\\r\\n&rsquo;</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO5quoteA2CmF":{"name":"quote","abstract":"<p>character &lsquo;&ldquo;&rsquo;</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO10apostropheA2CmF":{"name":"apostrophe","abstract":"<p>character <q>&lsquo;</q></p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO4charACSS2in_tcACmF":{"name":"char","abstract":"<p>character groups to match from</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO7charNotACSS2in_tcACmF":{"name":"charNot","abstract":"<p>character groups to not match from</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO7specialA2C16SpecialCharacterOcACmF":{"name":"special","abstract":"<p>special characters</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO5startA2CmF":{"name":"start","abstract":"<p>start character of the current line</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO3endA2CmF":{"name":"end","abstract":"<p>end character of the current line</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO12firstInInputA2CmF":{"name":"firstInInput","abstract":"<p>first character of the input anchor</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO11lastInInputA2CmF":{"name":"lastInInput","abstract":"<p>last character of the input anchor</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO8boundaryA2CmF":{"name":"boundary","abstract":"<p>word and non-word boundary</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO11notBoundaryA2CmF":{"name":"notBoundary","abstract":"<p>not at the boundary word and non-word characters</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO18endOfPreviousMatchA2CmF":{"name":"endOfPreviousMatch","abstract":"<p>match the same sequence as the last captured group</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO13backReferenceACSi6withId_tcACmF":{"name":"backReference","abstract":"<p>match the same sequence as a previously captured group</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO4textACSScACmF":{"name":"text","abstract":"<p>plain text</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO9repeatingA2C_AC10RepeatTypeO5timestcACmF":{"name":"repeating","abstract":"<p>repeat the given element with given times</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO6eitherACSayACGcACmF":{"name":"either","abstract":"<p>match any one of the sequence elements</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO8sequenceACSayACGcACmF":{"name":"sequence","abstract":"<p>a simple sequence of elements</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO7sectionA2CcACmF":{"name":"section","abstract":"<p>a sequence of elements to be treated like a element for operations</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO7captureA2CcACmF":{"name":"capture","abstract":"<p>a sequence of elements that is captured a group</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO6atomicA2CcACmF":{"name":"atomic","abstract":"<p>a sequence of elements to match atomically</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO9lookAheadA2CcACmF":{"name":"lookAhead","abstract":"<p>Zero-width lookahead assertion</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO17lookAheadInversedA2CcACmF":{"name":"lookAheadInversed","abstract":"<p>Zero-width negative lookahead assertion</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO10lookBehindA2CcACmF":{"name":"lookBehind","abstract":"<p>Zero-width lookbehind assertion</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO18lookBehindInversedA2CcACmF":{"name":"lookBehindInversed","abstract":"<p>Zero-width negative lookbehind assertion</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO4skipA2CmF":{"name":"skip","abstract":"<p>fragment for skip any number of any characters</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO6spacesA2CmF":{"name":"spaces","abstract":"<p>any number of space characters</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO5wordsA2CmF":{"name":"words","abstract":"<p>any number of word characters</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO9setConfigA2C0D0VcACmF":{"name":"setConfig","abstract":"<p>set the given config settings</p>","parent_name":"Element"},"Enums/Element.html#/s:8Patterns7ElementO11resetConfigA2C0D0VcACmF":{"name":"resetConfig","abstract":"<p>reset the given config settings</p>","parent_name":"Element"},"Enums/Element.html#/s:s25ExpressibleByArrayLiteralPxSay0cD7ElementQzG05arrayD0d_tcfc":{"name":"init(arrayLiteral:)","parent_name":"Element"},"Enums/Element/SpecialCharacter.html":{"name":"SpecialCharacter","abstract":"<p>characters specially handled by the matcher</p>","parent_name":"Element"},"Enums/Element/RepeatType.html":{"name":"RepeatType","abstract":"<p>Types of reating functions</p>","parent_name":"Element"},"Enums/Element/CollectionStatergy.html":{"name":"CollectionStatergy","abstract":"<p>Statergy enumeration for how data elements should be gathered</p>","parent_name":"Element"},"Enums/Element/Config.html":{"name":"Config","abstract":"<p>Settings used to configure the match behavior</p>","parent_name":"Element"},"Enums/Element.html#/s:s23CustomStringConvertibleP11descriptionSSv":{"name":"description","parent_name":"Element"},"Enums/Fragment.html#/s:8Patterns8FragmentO5matchACyxGxcAEmlF":{"name":"match","abstract":"<p>Matched region</p>","parent_name":"Fragment"},"Enums/Fragment.html#/s:8Patterns8FragmentO4textACyxGxcAEmlF":{"name":"text","abstract":"<p>Unmatched region</p>","parent_name":"Fragment"},"Enums/Fragment.html#/s:8Patterns8FragmentO8subMatchACyxGx_Si2idtcAEmlF":{"name":"subMatch","abstract":"<p>Match within a match region</p>","parent_name":"Fragment"},"Enums/Fragment.html#/s:8Patterns8FragmentO7contentxv":{"name":"content","abstract":"<p>value of the underlining fragment content</p>","parent_name":"Fragment"},"Enums/Fragment.html#/s:8Patterns8FragmentO3mapACyqd__Gqd__xc5using_tlF":{"name":"map(using:)","abstract":"<p>transform between fragment data into another type</p>","parent_name":"Fragment"},"Enums/Fragment.html#/s:8Patterns8FragmentOAAs23CustomStringConvertibleRzlE04dataD0SSv":{"name":"dataString","abstract":"<p>content as string</p>","parent_name":"Fragment"},"Enums/Fragment.html":{"name":"Fragment","abstract":"<p>Generic fragment types</p>"},"Enums/Element.html":{"name":"Element","abstract":"<p>Elements are components used to build Pattern</p>"},"Classes/Factory.html#/s:8Patterns7FactoryC5emptyAA7Pattern_pyFZ":{"name":"empty()","abstract":"<p>creates an empty matcher</p>","parent_name":"Factory"},"Classes/Factory.html#/s:8Patterns7FactoryC5regexAA7Pattern_pSS_Sb9matchCasetFZ":{"name":"regex(_:matchCase:)","abstract":"<p>creates a regular expression pattern</p>","parent_name":"Factory"},"Classes/Factory.html#/s:8Patterns7FactoryC4wordAA7Pattern_pSS_Sb9matchCasetFZ":{"name":"word(_:matchCase:)","abstract":"<p>creates a whole word matcher</p>","parent_name":"Factory"},"Classes/Factory.html#/s:8Patterns7FactoryC6prefixAA7Pattern_pSS_Sb9matchCasetFZ":{"name":"prefix(_:matchCase:)","abstract":"<p>creates a prefix matcher</p>","parent_name":"Factory"},"Classes/Factory.html#/s:8Patterns7FactoryC6suffixAA7Pattern_pSS_Sb9matchCasetFZ":{"name":"suffix(_:matchCase:)","abstract":"<p>creates a suffix matcher</p>","parent_name":"Factory"},"Classes/Factory.html#/s:8Patterns7FactoryC4textAA7Pattern_pSS_Sb9matchCasetFZ":{"name":"text(_:matchCase:)","abstract":"<p>creates a plain text matcher</p>","parent_name":"Factory"},"Classes/Factory.html#/s:8Patterns7FactoryC8wildcardAA7Pattern_pSS_Sb9matchCasetFZ":{"name":"wildcard(_:matchCase:)","abstract":"<p>creates a wildcard (aka UNIX glob) pattern</p>","parent_name":"Factory"},"Classes/Factory.html#/s:8Patterns7FactoryC11xcodeFilterAA7Pattern_pSS2of_tFZ":{"name":"xcodeFilter(of:)","abstract":"<p>creates a XCode-finder-like pattern</p>","parent_name":"Factory"},"Classes/Factory.html":{"name":"Factory","abstract":"<p>A factory class that exposes the different patterns"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}